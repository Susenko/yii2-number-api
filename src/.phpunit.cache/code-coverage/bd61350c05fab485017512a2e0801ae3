a:6:{s:9:"classesIn";a:1:{s:34:"Psy\CodeCleaner\ValidClassNamePass";a:6:{s:4:"name";s:18:"ValidClassNamePass";s:14:"namespacedName";s:34:"Psy\CodeCleaner\ValidClassNamePass";s:9:"namespace";s:15:"Psy\CodeCleaner";s:9:"startLine";i:33;s:7:"endLine";i:326;s:7:"methods";a:17:{s:9:"enterNode";a:6:{s:10:"methodName";s:9:"enterNode";s:9:"signature";s:31:"enterNode(PhpParser\Node $node)";s:10:"visibility";s:6:"public";s:9:"startLine";i:52;s:7:"endLine";i:71;s:3:"ccn";i:6;}s:9:"leaveNode";a:6:{s:10:"methodName";s:9:"leaveNode";s:9:"signature";s:31:"leaveNode(PhpParser\Node $node)";s:10:"visibility";s:6:"public";s:9:"startLine";i:78;s:7:"endLine";i:83;s:3:"ccn";i:2;}s:13:"isConditional";a:6:{s:10:"methodName";s:13:"isConditional";s:9:"signature";s:41:"isConditional(PhpParser\Node $node): bool";s:10:"visibility";s:7:"private";s:9:"startLine";i:85;s:7:"endLine";i:92;s:3:"ccn";i:5;}s:22:"validateClassStatement";a:6:{s:10:"methodName";s:22:"validateClassStatement";s:9:"signature";s:56:"validateClassStatement(PhpParser\Node\Stmt\Class_ $stmt)";s:10:"visibility";s:9:"protected";s:9:"startLine";i:99;s:7:"endLine";i:106;s:3:"ccn";i:2;}s:26:"validateInterfaceStatement";a:6:{s:10:"methodName";s:26:"validateInterfaceStatement";s:9:"signature";s:64:"validateInterfaceStatement(PhpParser\Node\Stmt\Interface_ $stmt)";s:10:"visibility";s:9:"protected";s:9:"startLine";i:113;s:7:"endLine";i:117;s:3:"ccn";i:1;}s:22:"validateTraitStatement";a:6:{s:10:"methodName";s:22:"validateTraitStatement";s:9:"signature";s:56:"validateTraitStatement(PhpParser\Node\Stmt\Trait_ $stmt)";s:10:"visibility";s:9:"protected";s:9:"startLine";i:124;s:7:"endLine";i:127;s:3:"ccn";i:1;}s:15:"ensureCanDefine";a:6:{s:10:"methodName";s:15:"ensureCanDefine";s:9:"signature";s:61:"ensureCanDefine(PhpParser\Node\Stmt $stmt, string $scopeType)";s:10:"visibility";s:9:"protected";s:9:"startLine";i:137;s:7:"endLine";i:163;s:3:"ccn";i:6;}s:17:"ensureClassExists";a:6:{s:10:"methodName";s:17:"ensureClassExists";s:9:"signature";s:58:"ensureClassExists(string $name, PhpParser\Node\Stmt $stmt)";s:10:"visibility";s:9:"protected";s:9:"startLine";i:173;s:7:"endLine";i:178;s:3:"ccn";i:2;}s:28:"ensureClassOrInterfaceExists";a:6:{s:10:"methodName";s:28:"ensureClassOrInterfaceExists";s:9:"signature";s:69:"ensureClassOrInterfaceExists(string $name, PhpParser\Node\Stmt $stmt)";s:10:"visibility";s:9:"protected";s:9:"startLine";i:188;s:7:"endLine";i:193;s:3:"ccn";i:3;}s:24:"ensureClassOrTraitExists";a:6:{s:10:"methodName";s:24:"ensureClassOrTraitExists";s:9:"signature";s:65:"ensureClassOrTraitExists(string $name, PhpParser\Node\Stmt $stmt)";s:10:"visibility";s:9:"protected";s:9:"startLine";i:203;s:7:"endLine";i:208;s:3:"ccn";i:3;}s:18:"ensureMethodExists";a:6:{s:10:"methodName";s:18:"ensureMethodExists";s:9:"signature";s:74:"ensureMethodExists(string $class, string $name, PhpParser\Node\Stmt $stmt)";s:10:"visibility";s:9:"protected";s:9:"startLine";i:219;s:7:"endLine";i:241;s:3:"ccn";i:6;}s:21:"ensureInterfacesExist";a:6:{s:10:"methodName";s:21:"ensureInterfacesExist";s:9:"signature";s:67:"ensureInterfacesExist(array $interfaces, PhpParser\Node\Stmt $stmt)";s:10:"visibility";s:9:"protected";s:9:"startLine";i:251;s:7:"endLine";i:260;s:3:"ccn";i:3;}s:11:"classExists";a:6:{s:10:"methodName";s:11:"classExists";s:9:"signature";s:31:"classExists(string $name): bool";s:10:"visibility";s:9:"protected";s:9:"startLine";i:269;s:7:"endLine";i:279;s:3:"ccn";i:3;}s:15:"interfaceExists";a:6:{s:10:"methodName";s:15:"interfaceExists";s:9:"signature";s:35:"interfaceExists(string $name): bool";s:10:"visibility";s:9:"protected";s:9:"startLine";i:286;s:7:"endLine";i:289;s:3:"ccn";i:2;}s:11:"traitExists";a:6:{s:10:"methodName";s:11:"traitExists";s:9:"signature";s:31:"traitExists(string $name): bool";s:10:"visibility";s:9:"protected";s:9:"startLine";i:296;s:7:"endLine";i:299;s:3:"ccn";i:2;}s:11:"findInScope";a:6:{s:10:"methodName";s:11:"findInScope";s:9:"signature";s:25:"findInScope(string $name)";s:10:"visibility";s:9:"protected";s:9:"startLine";i:308;s:7:"endLine";i:314;s:3:"ccn";i:2;}s:11:"createError";a:6:{s:10:"methodName";s:11:"createError";s:9:"signature";s:86:"createError(string $msg, PhpParser\Node\Stmt $stmt): Psy\Exception\FatalErrorException";s:10:"visibility";s:9:"protected";s:9:"startLine";i:322;s:7:"endLine";i:325;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:327;s:18:"commentLinesOfCode";i:135;s:21:"nonCommentLinesOfCode";i:192;}s:15:"ignoredLinesFor";a:1:{i:0;i:33;}s:17:"executableLinesIn";a:66:{i:54;i:5;i:56;i:6;i:57;i:7;i:59;i:8;i:62;i:9;i:63;i:10;i:64;i:11;i:65;i:12;i:66;i:13;i:67;i:14;i:68;i:15;i:80;i:16;i:81;i:17;i:87;i:18;i:88;i:18;i:89;i:18;i:90;i:18;i:91;i:18;i:101;i:19;i:102;i:20;i:103;i:21;i:105;i:22;i:115;i:23;i:116;i:24;i:126;i:25;i:140;i:27;i:141;i:28;i:144;i:29;i:147;i:30;i:148;i:31;i:149;i:32;i:150;i:33;i:151;i:34;i:152;i:35;i:153;i:36;i:156;i:37;i:157;i:38;i:162;i:39;i:175;i:40;i:176;i:41;i:190;i:42;i:191;i:43;i:205;i:44;i:206;i:45;i:221;i:46;i:224;i:47;i:225;i:48;i:229;i:49;i:230;i:50;i:234;i:51;i:235;i:52;i:238;i:53;i:239;i:54;i:253;i:55;i:255;i:56;i:256;i:57;i:257;i:58;i:274;i:59;i:275;i:60;i:278;i:61;i:288;i:62;i:298;i:63;i:310;i:64;i:311;i:65;i:312;i:66;i:324;i:67;}}