a:6:{s:9:"classesIn";a:1:{s:49:"PHPUnit\Framework\MockObject\Generator\MockMethod";a:6:{s:4:"name";s:10:"MockMethod";s:14:"namespacedName";s:49:"PHPUnit\Framework\MockObject\Generator\MockMethod";s:9:"namespace";s:38:"PHPUnit\Framework\MockObject\Generator";s:9:"startLine";i:38;s:7:"endLine";i:396;s:7:"methods";a:12:{s:14:"fromReflection";a:6:{s:10:"methodName";s:14:"fromReflection";s:9:"signature";s:94:"fromReflection(ReflectionMethod $method, bool $callOriginalMethod, bool $cloneArguments): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:75;s:7:"endLine";i:119;s:3:"ccn";i:7;}s:8:"fromName";a:6:{s:10:"methodName";s:8:"fromName";s:9:"signature";s:75:"fromName(string $className, string $methodName, bool $cloneArguments): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:125;s:7:"endLine";i:142;s:3:"ccn";i:1;}s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:327:"__construct(string $className, string $methodName, bool $cloneArguments, string $modifier, string $argumentsForDeclaration, string $argumentsForCall, array $defaultParameterValues, int $numberOfParameters, SebastianBergmann\Type\Type $returnType, string $reference, bool $callOriginalMethod, bool $static, ?string $deprecation)";s:10:"visibility";s:7:"private";s:9:"startLine";i:150;s:7:"endLine";i:165;s:3:"ccn";i:1;}s:10:"methodName";a:6:{s:10:"methodName";s:10:"methodName";s:9:"signature";s:20:"methodName(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:170;s:7:"endLine";i:173;s:3:"ccn";i:1;}s:12:"generateCode";a:6:{s:10:"methodName";s:12:"generateCode";s:9:"signature";s:22:"generateCode(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:178;s:7:"endLine";i:241;s:3:"ccn";i:10;}s:10:"returnType";a:6:{s:10:"methodName";s:10:"returnType";s:9:"signature";s:41:"returnType(): SebastianBergmann\Type\Type";s:10:"visibility";s:6:"public";s:9:"startLine";i:243;s:7:"endLine";i:246;s:3:"ccn";i:1;}s:22:"defaultParameterValues";a:6:{s:10:"methodName";s:22:"defaultParameterValues";s:9:"signature";s:31:"defaultParameterValues(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:251;s:7:"endLine";i:254;s:3:"ccn";i:1;}s:18:"numberOfParameters";a:6:{s:10:"methodName";s:18:"numberOfParameters";s:9:"signature";s:25:"numberOfParameters(): int";s:10:"visibility";s:6:"public";s:9:"startLine";i:259;s:7:"endLine";i:262;s:3:"ccn";i:1;}s:30:"methodParametersForDeclaration";a:6:{s:10:"methodName";s:30:"methodParametersForDeclaration";s:9:"signature";s:64:"methodParametersForDeclaration(ReflectionMethod $method): string";s:10:"visibility";s:7:"private";s:9:"startLine";i:269;s:7:"endLine";i:308;s:3:"ccn";i:9;}s:23:"methodParametersForCall";a:6:{s:10:"methodName";s:23:"methodParametersForCall";s:9:"signature";s:57:"methodParametersForCall(ReflectionMethod $method): string";s:10:"visibility";s:7:"private";s:9:"startLine";i:315;s:7:"endLine";i:341;s:3:"ccn";i:6;}s:18:"exportDefaultValue";a:6:{s:10:"methodName";s:18:"exportDefaultValue";s:9:"signature";s:58:"exportDefaultValue(ReflectionParameter $parameter): string";s:10:"visibility";s:7:"private";s:9:"startLine";i:346;s:7:"endLine";i:377;s:3:"ccn";i:3;}s:29:"methodParametersDefaultValues";a:6:{s:10:"methodName";s:29:"methodParametersDefaultValues";s:9:"signature";s:62:"methodParametersDefaultValues(ReflectionMethod $method): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:382;s:7:"endLine";i:395;s:3:"ccn";i:3;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:397;s:18:"commentLinesOfCode";i:75;s:21:"nonCommentLinesOfCode";i:322;}s:15:"ignoredLinesFor";a:10:{i:0;i:38;i:1;i:368;i:2;i:369;i:3;i:370;i:4;i:371;i:5;i:372;i:6;i:373;i:7;i:374;i:8;i:375;i:9;i:376;}s:17:"executableLinesIn";a:164:{i:77;i:15;i:78;i:16;i:79;i:17;i:80;i:18;i:82;i:19;i:85;i:20;i:86;i:21;i:89;i:22;i:90;i:23;i:92;i:24;i:95;i:25;i:97;i:26;i:98;i:27;i:99;i:28;i:101;i:29;i:104;i:30;i:105;i:30;i:106;i:30;i:107;i:30;i:108;i:30;i:109;i:30;i:110;i:30;i:111;i:30;i:112;i:30;i:113;i:30;i:114;i:30;i:115;i:30;i:116;i:30;i:117;i:30;i:118;i:30;i:127;i:31;i:128;i:31;i:129;i:31;i:130;i:31;i:131;i:31;i:132;i:31;i:133;i:31;i:134;i:31;i:135;i:31;i:136;i:31;i:137;i:31;i:138;i:31;i:139;i:31;i:140;i:31;i:141;i:31;i:152;i:32;i:153;i:33;i:154;i:34;i:155;i:35;i:156;i:36;i:157;i:37;i:158;i:38;i:159;i:39;i:160;i:40;i:161;i:41;i:162;i:42;i:163;i:43;i:164;i:44;i:172;i:45;i:180;i:46;i:181;i:47;i:183;i:48;i:184;i:48;i:185;i:48;i:186;i:48;i:189;i:49;i:190;i:50;i:192;i:51;i:193;i:52;i:197;i:52;i:200;i:53;i:201;i:54;i:202;i:55;i:204;i:56;i:205;i:56;i:206;i:56;i:207;i:56;i:208;i:56;i:210;i:57;i:213;i:58;i:215;i:59;i:217;i:60;i:218;i:61;i:219;i:62;i:220;i:63;i:223;i:64;i:224;i:64;i:225;i:64;i:226;i:64;i:227;i:64;i:228;i:64;i:229;i:64;i:230;i:64;i:231;i:64;i:232;i:64;i:233;i:64;i:234;i:64;i:235;i:64;i:236;i:64;i:237;i:64;i:238;i:64;i:240;i:65;i:245;i:66;i:253;i:67;i:261;i:68;i:271;i:69;i:272;i:70;i:274;i:71;i:275;i:72;i:280;i:73;i:281;i:74;i:284;i:75;i:285;i:76;i:286;i:77;i:288;i:78;i:289;i:79;i:292;i:80;i:293;i:81;i:296;i:82;i:297;i:83;i:298;i:84;i:299;i:85;i:300;i:86;i:301;i:87;i:304;i:88;i:307;i:89;i:317;i:90;i:319;i:91;i:320;i:92;i:325;i:93;i:326;i:94;i:329;i:95;i:330;i:96;i:333;i:97;i:334;i:98;i:336;i:99;i:340;i:100;i:349;i:101;i:351;i:102;i:352;i:103;i:355;i:104;i:357;i:105;i:358;i:105;i:359;i:105;i:360;i:105;i:361;i:105;i:362;i:105;i:363;i:105;i:364;i:105;i:365;i:105;i:366;i:105;i:367;i:105;i:369;i:106;i:374;i:108;i:370;i:108;i:371;i:108;i:372;i:108;i:373;i:108;i:384;i:109;i:386;i:110;i:387;i:111;i:388;i:112;i:391;i:113;i:394;i:114;}}