a:6:{s:9:"classesIn";a:1:{s:42:"Codeception\Verify\Expectations\ExpectFile";a:6:{s:4:"name";s:10:"ExpectFile";s:14:"namespacedName";s:42:"Codeception\Verify\Expectations\ExpectFile";s:9:"namespace";s:31:"Codeception\Verify\Expectations";s:9:"startLine";i:10;s:7:"endLine";i:168;s:7:"methods";a:13:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:27:"__construct(string $actual)";s:10:"visibility";s:6:"public";s:9:"startLine";i:14;s:7:"endLine";i:17;s:3:"ccn";i:1;}s:10:"notToExist";a:6:{s:10:"methodName";s:10:"notToExist";s:9:"signature";s:33:"notToExist(string $message): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:25;s:7:"endLine";i:29;s:3:"ccn";i:1;}s:9:"toBeEqual";a:6:{s:10:"methodName";s:9:"toBeEqual";s:9:"signature";s:50:"toBeEqual(string $expected, string $message): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:38;s:7:"endLine";i:42;s:3:"ccn";i:1;}s:23:"toBeEqualCanonicalizing";a:6:{s:10:"methodName";s:23:"toBeEqualCanonicalizing";s:9:"signature";s:64:"toBeEqualCanonicalizing(string $expected, string $message): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:51;s:7:"endLine";i:55;s:3:"ccn";i:1;}s:21:"toBeEqualIgnoringCase";a:6:{s:10:"methodName";s:21:"toBeEqualIgnoringCase";s:9:"signature";s:62:"toBeEqualIgnoringCase(string $expected, string $message): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:64;s:7:"endLine";i:68;s:3:"ccn";i:1;}s:7:"toExist";a:6:{s:10:"methodName";s:7:"toExist";s:9:"signature";s:30:"toExist(string $message): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:76;s:7:"endLine";i:80;s:3:"ccn";i:1;}s:25:"toExistAndNotToBeReadable";a:6:{s:10:"methodName";s:25:"toExistAndNotToBeReadable";s:9:"signature";s:48:"toExistAndNotToBeReadable(string $message): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:88;s:7:"endLine";i:92;s:3:"ccn";i:1;}s:25:"toExistAndNotToBeWritable";a:6:{s:10:"methodName";s:25:"toExistAndNotToBeWritable";s:9:"signature";s:48:"toExistAndNotToBeWritable(string $message): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:100;s:7:"endLine";i:104;s:3:"ccn";i:1;}s:22:"toExistAndToBeReadable";a:6:{s:10:"methodName";s:22:"toExistAndToBeReadable";s:9:"signature";s:45:"toExistAndToBeReadable(string $message): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:112;s:7:"endLine";i:116;s:3:"ccn";i:1;}s:22:"toExistAndToBeWritable";a:6:{s:10:"methodName";s:22:"toExistAndToBeWritable";s:9:"signature";s:45:"toExistAndToBeWritable(string $message): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:124;s:7:"endLine";i:128;s:3:"ccn";i:1;}s:10:"toNotEqual";a:6:{s:10:"methodName";s:10:"toNotEqual";s:9:"signature";s:51:"toNotEqual(string $expected, string $message): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:137;s:7:"endLine";i:141;s:3:"ccn";i:1;}s:24:"toNotEqualCanonicalizing";a:6:{s:10:"methodName";s:24:"toNotEqualCanonicalizing";s:9:"signature";s:65:"toNotEqualCanonicalizing(string $expected, string $message): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:150;s:7:"endLine";i:154;s:3:"ccn";i:1;}s:22:"toNotEqualIgnoringCase";a:6:{s:10:"methodName";s:22:"toNotEqualIgnoringCase";s:9:"signature";s:63:"toNotEqualIgnoringCase(string $expected, string $message): self";s:10:"visibility";s:6:"public";s:9:"startLine";i:163;s:7:"endLine";i:167;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:168;s:18:"commentLinesOfCode";i:78;s:21:"nonCommentLinesOfCode";i:90;}s:15:"ignoredLinesFor";a:1:{i:0;i:10;}s:17:"executableLinesIn";a:25:{i:16;i:2;i:27;i:3;i:28;i:4;i:40;i:5;i:41;i:6;i:53;i:7;i:54;i:8;i:66;i:9;i:67;i:10;i:78;i:11;i:79;i:12;i:90;i:13;i:91;i:14;i:102;i:15;i:103;i:16;i:114;i:17;i:115;i:18;i:126;i:19;i:127;i:20;i:139;i:21;i:140;i:22;i:152;i:23;i:153;i:24;i:165;i:25;i:166;i:26;}}