a:6:{s:9:"classesIn";a:1:{s:28:"Faker\Provider\en_CA\Address";a:6:{s:4:"name";s:7:"Address";s:14:"namespacedName";s:28:"Faker\Provider\en_CA\Address";s:9:"namespace";s:20:"Faker\Provider\en_CA";s:9:"startLine";i:8;s:7:"endLine";i:72;s:7:"methods";a:4:{s:8:"province";a:6:{s:10:"methodName";s:8:"province";s:9:"signature";s:10:"province()";s:10:"visibility";s:6:"public";s:9:"startLine";i:37;s:7:"endLine";i:40;s:3:"ccn";i:1;}s:12:"provinceAbbr";a:6:{s:10:"methodName";s:12:"provinceAbbr";s:9:"signature";s:14:"provinceAbbr()";s:10:"visibility";s:6:"public";s:9:"startLine";i:45;s:7:"endLine";i:48;s:3:"ccn";i:1;}s:20:"randomPostcodeLetter";a:6:{s:10:"methodName";s:20:"randomPostcodeLetter";s:9:"signature";s:22:"randomPostcodeLetter()";s:10:"visibility";s:6:"public";s:9:"startLine";i:55;s:7:"endLine";i:58;s:3:"ccn";i:1;}s:8:"postcode";a:6:{s:10:"methodName";s:8:"postcode";s:9:"signature";s:10:"postcode()";s:10:"visibility";s:6:"public";s:9:"startLine";i:63;s:7:"endLine";i:71;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:73;s:18:"commentLinesOfCode";i:17;s:21:"nonCommentLinesOfCode";i:56;}s:15:"ignoredLinesFor";a:1:{i:0;i:8;}s:17:"executableLinesIn";a:7:{i:39;i:6;i:47;i:7;i:57;i:8;i:65;i:9;i:67;i:10;i:68;i:11;i:70;i:12;}}