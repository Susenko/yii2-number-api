a:6:{s:9:"classesIn";a:1:{s:42:"Symfony\Component\Console\Input\ArrayInput";a:6:{s:4:"name";s:10:"ArrayInput";s:14:"namespacedName";s:42:"Symfony\Component\Console\Input\ArrayInput";s:9:"namespace";s:31:"Symfony\Component\Console\Input";s:9:"startLine";i:26;s:7:"endLine";i:191;s:7:"methods";a:9:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:92:"__construct(array $parameters, ?Symfony\Component\Console\Input\InputDefinition $definition)";s:10:"visibility";s:6:"public";s:9:"startLine";i:28;s:7:"endLine";i:33;s:3:"ccn";i:1;}s:16:"getFirstArgument";a:6:{s:10:"methodName";s:16:"getFirstArgument";s:9:"signature";s:27:"getFirstArgument(): ?string";s:10:"visibility";s:6:"public";s:9:"startLine";i:35;s:7:"endLine";i:46;s:3:"ccn";i:5;}s:18:"hasParameterOption";a:6:{s:10:"methodName";s:18:"hasParameterOption";s:9:"signature";s:64:"hasParameterOption(string|array $values, bool $onlyParams): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:48;s:7:"endLine";i:67;s:3:"ccn";i:6;}s:18:"getParameterOption";a:6:{s:10:"methodName";s:18:"getParameterOption";s:9:"signature";s:108:"getParameterOption(string|array $values, string|bool|int|float|array|null $default, bool $onlyParams): mixed";s:10:"visibility";s:6:"public";s:9:"startLine";i:69;s:7:"endLine";i:88;s:3:"ccn";i:9;}s:10:"__toString";a:6:{s:10:"methodName";s:10:"__toString";s:9:"signature";s:20:"__toString(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:93;s:7:"endLine";i:112;s:3:"ccn";i:11;}s:5:"parse";a:6:{s:10:"methodName";s:5:"parse";s:9:"signature";s:13:"parse(): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:114;s:7:"endLine";i:128;s:3:"ccn";i:5;}s:14:"addShortOption";a:6:{s:10:"methodName";s:14:"addShortOption";s:9:"signature";s:52:"addShortOption(string $shortcut, mixed $value): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:135;s:7:"endLine";i:142;s:3:"ccn";i:2;}s:13:"addLongOption";a:6:{s:10:"methodName";s:13:"addLongOption";s:9:"signature";s:47:"addLongOption(string $name, mixed $value): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:150;s:7:"endLine";i:176;s:3:"ccn";i:6;}s:11:"addArgument";a:6:{s:10:"methodName";s:11:"addArgument";s:9:"signature";s:49:"addArgument(string|int $name, mixed $value): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:183;s:7:"endLine";i:190;s:3:"ccn";i:2;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:192;s:18:"commentLinesOfCode";i:36;s:21:"nonCommentLinesOfCode";i:156;}s:15:"ignoredLinesFor";a:1:{i:0;i:26;}s:17:"executableLinesIn";a:62:{i:32;i:1;i:37;i:2;i:38;i:3;i:39;i:4;i:42;i:5;i:45;i:6;i:50;i:7;i:52;i:8;i:53;i:9;i:54;i:10;i:57;i:11;i:58;i:12;i:61;i:13;i:62;i:14;i:66;i:15;i:71;i:16;i:73;i:17;i:74;i:18;i:75;i:19;i:78;i:20;i:79;i:21;i:80;i:22;i:82;i:23;i:83;i:24;i:87;i:25;i:95;i:26;i:96;i:27;i:97;i:28;i:98;i:29;i:99;i:30;i:100;i:31;i:101;i:32;i:104;i:33;i:107;i:34;i:111;i:35;i:116;i:36;i:117;i:37;i:118;i:38;i:120;i:39;i:121;i:40;i:122;i:41;i:123;i:42;i:125;i:43;i:137;i:44;i:138;i:45;i:141;i:46;i:152;i:47;i:153;i:48;i:154;i:49;i:157;i:50;i:158;i:51;i:160;i:52;i:163;i:53;i:165;i:54;i:166;i:55;i:167;i:56;i:170;i:57;i:171;i:58;i:175;i:59;i:185;i:60;i:186;i:61;i:189;i:62;}}