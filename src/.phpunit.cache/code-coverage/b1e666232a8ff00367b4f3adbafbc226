a:6:{s:9:"classesIn";a:1:{s:32:"SebastianBergmann\Type\UnionType";a:6:{s:4:"name";s:9:"UnionType";s:14:"namespacedName";s:32:"SebastianBergmann\Type\UnionType";s:9:"namespace";s:22:"SebastianBergmann\Type";s:9:"startLine";i:21;s:7:"endLine";i:153;s:7:"methods";a:10:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:47:"__construct(SebastianBergmann\Type\Type $types)";s:10:"visibility";s:6:"public";s:9:"startLine";i:31;s:7:"endLine";i:39;s:3:"ccn";i:2;}s:12:"isAssignable";a:6:{s:10:"methodName";s:12:"isAssignable";s:9:"signature";s:54:"isAssignable(SebastianBergmann\Type\Type $other): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:41;s:7:"endLine";i:50;s:3:"ccn";i:3;}s:8:"asString";a:6:{s:10:"methodName";s:8:"asString";s:9:"signature";s:18:"asString(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:55;s:7:"endLine";i:58;s:3:"ccn";i:1;}s:4:"name";a:6:{s:10:"methodName";s:4:"name";s:9:"signature";s:14:"name(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:63;s:7:"endLine";i:85;s:3:"ccn";i:3;}s:10:"allowsNull";a:6:{s:10:"methodName";s:10:"allowsNull";s:9:"signature";s:18:"allowsNull(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:87;s:7:"endLine";i:96;s:3:"ccn";i:3;}s:7:"isUnion";a:6:{s:10:"methodName";s:7:"isUnion";s:9:"signature";s:15:"isUnion(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:98;s:7:"endLine";i:101;s:3:"ccn";i:1;}s:25:"containsIntersectionTypes";a:6:{s:10:"methodName";s:25:"containsIntersectionTypes";s:9:"signature";s:33:"containsIntersectionTypes(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:103;s:7:"endLine";i:112;s:3:"ccn";i:3;}s:5:"types";a:6:{s:10:"methodName";s:5:"types";s:9:"signature";s:14:"types(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:117;s:7:"endLine";i:120;s:3:"ccn";i:1;}s:23:"ensureMinimumOfTwoTypes";a:6:{s:10:"methodName";s:23:"ensureMinimumOfTwoTypes";s:9:"signature";s:65:"ensureMinimumOfTwoTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:125;s:7:"endLine";i:132;s:3:"ccn";i:2;}s:20:"ensureOnlyValidTypes";a:6:{s:10:"methodName";s:20:"ensureOnlyValidTypes";s:9:"signature";s:62:"ensureOnlyValidTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:137;s:7:"endLine";i:152;s:3:"ccn";i:4;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:154;s:18:"commentLinesOfCode";i:33;s:21:"nonCommentLinesOfCode";i:121;}s:15:"ignoredLinesFor";a:1:{i:0;i:21;}s:17:"executableLinesIn";a:42:{i:33;i:2;i:34;i:3;i:36;i:4;i:38;i:5;i:43;i:6;i:44;i:7;i:45;i:8;i:49;i:9;i:57;i:10;i:65;i:11;i:67;i:12;i:68;i:13;i:69;i:14;i:71;i:15;i:74;i:16;i:77;i:17;i:79;i:18;i:82;i:19;i:84;i:20;i:89;i:21;i:90;i:22;i:91;i:23;i:95;i:24;i:100;i:25;i:105;i:26;i:106;i:27;i:107;i:28;i:111;i:29;i:119;i:30;i:127;i:31;i:130;i:33;i:128;i:33;i:129;i:33;i:139;i:34;i:140;i:35;i:143;i:37;i:141;i:37;i:142;i:37;i:146;i:38;i:149;i:40;i:147;i:40;i:148;i:40;}}